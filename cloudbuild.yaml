steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/ai-corp-agent/ai-agent:$SHORT_SHA', '.']

  # Push the Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/ai-corp-agent/ai-agent:$SHORT_SHA']

  # Fetch GKE credentials
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['container', 'clusters', 'get-credentials', 'llmcorp-cluster-westus-4', '--zone', 'us-west4-a']

 # Install required tools, substitute environment variables, and apply the Kubernetes deployment configurations
  - name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get update && apt-get install -y gettext-base curl
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        mv ./kubectl /usr/local/bin/kubectl
        envsubst < kubernetes/deployment.yaml.template > kubernetes/deployment.yaml
        kubectl apply -f kubernetes/deployment.yaml
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-west4-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=llmcorp-cluster-westus-4'


  # Apply the Kubernetes service configurations
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'kubernetes/service.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-west4-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=llmcorp-cluster-westus-4'

images:
  - 'gcr.io/ai-corp-agent/ai-agent:$SHORT_SHA'
